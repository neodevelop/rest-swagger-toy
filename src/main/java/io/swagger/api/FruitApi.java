/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Fruit;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-11-29T21:37:44.994Z")

@Api(value = "fruit", description = "the fruit API")
public interface FruitApi {

    @ApiOperation(value = "Add a new fruit", notes = "", response = Void.class, tags={ "fruit", })
    @ApiResponses(value = { 
        @ApiResponse(code = 405, message = "Invalid input", response = Void.class) })
    
    @RequestMapping(value = "/fruit",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addFruit(@ApiParam(value = "The fruit" ,required=true )  @Valid @RequestBody Fruit fruit);


    @ApiOperation(value = "A single fruit", notes = "", response = Fruit.class, tags={ "fruit", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "succesful operation", response = Fruit.class) })
    
    @RequestMapping(value = "/fruit/{fruitId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Fruit> fruitGet(@ApiParam(value = "ID of the fruit",required=true ) @PathVariable("fruitId") Integer fruitId);


    @ApiOperation(value = "List of fruits", notes = "", response = Fruit.class, responseContainer = "List", tags={ "fruit", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Fruit.class, responseContainer = "List") })
    
    @RequestMapping(value = "/fruit",
        method = RequestMethod.GET)
    ResponseEntity<List<Fruit>> listFruits();


    @ApiOperation(value = "Delete a single fruit", notes = "", response = Fruit.class, tags={ "fruit", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "succesful operation", response = Fruit.class) })

    @RequestMapping(value = "/fruit/{fruitId}",
            produces = { "application/json" },
            method = RequestMethod.DELETE)
    ResponseEntity<Fruit> fruitDelete(@ApiParam(value = "ID of the fruit",required=true ) @PathVariable("fruitId") Integer fruitId);

}
